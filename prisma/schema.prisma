generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id         String   @id @default(uuid())
  email      String?  @unique
  password   String?
  avatar     String?
  created_at DateTime @default(now())

  feedbacks Feedback[]
  upvotes   Upvote[]

  @@map("users")
}

model Feedback {
  id          String   @id @default(uuid())
  title       String
  description String
  categoryId  String?
  statusId    String?
  authorId    String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  author   User      @relation(fields: [authorId], references: [id], onDelete: Cascade)
  category Category? @relation(fields: [categoryId], references: [id], onDelete: SetNull)
  status   Status?   @relation(fields: [statusId], references: [id], onDelete: SetNull)

  upvotes Upvote[]

  @@map("feedbacks")
}

model Upvote {
  id         String   @id @default(uuid())
  feedbackId String
  userId     String
  createdAt  DateTime @default(now())

  feedback Feedback @relation(fields: [feedbackId], references: [id], onDelete: Cascade)
  user     User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("upvotes")
}

model Category {
  id   String @id @default(uuid())
  name String

  Feedback Feedback[]

  @@map("categories")
}

model Status {
  id   String @id @default(uuid())
  name String

  Feedback Feedback[]

  @@map("statuses")
}
